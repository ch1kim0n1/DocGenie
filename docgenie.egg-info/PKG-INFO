Metadata-Version: 2.4
Name: docgenie
Version: 1.0.0
Summary: Auto-documentation tool that generates comprehensive README files for any codebase
Home-page: https://github.com/docgenie/docgenie
Author: DocGenie Team
Author-email: contact@docgenie.dev
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Documentation
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: click>=8.0.0
Requires-Dist: gitpython>=3.1.0
Requires-Dist: tree-sitter>=0.20.0
Requires-Dist: tree-sitter-python>=0.20.0
Requires-Dist: tree-sitter-javascript>=0.20.0
Requires-Dist: tree-sitter-java>=0.20.0
Requires-Dist: tree-sitter-cpp>=0.20.0
Requires-Dist: tree-sitter-go>=0.20.0
Requires-Dist: tree-sitter-rust>=0.20.0
Requires-Dist: jinja2>=3.0.0
Requires-Dist: pyyaml>=6.0
Requires-Dist: toml>=0.10.0
Requires-Dist: pygments>=2.10.0
Requires-Dist: pathspec>=0.9.0
Requires-Dist: requests>=2.25.0
Requires-Dist: markdown>=3.3.0
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# DocGenie 🧞

**Auto-documentation tool for any codebase - Generate comprehensive README files in minutes!**

<img width="660" height="338" alt="image" src="https://github.com/user-attachments/assets/7f32a0a7-8360-459c-a20e-5d34b74b8c43" />

DocGenie is a powerful Python library that automatically analyzes your codebase and generates comprehensive, professional README documentation. Simply run one command and get a detailed README with project structure, dependencies, API documentation, and more!

## 🚀 Features

- **🔍 Multi-language Support**: Analyzes Python, JavaScript, TypeScript, Java, C++, Go, Rust, and more
- **📊 Comprehensive Analysis**: Extracts functions, classes, dependencies, and project structure
- **🎨 Beautiful Templates**: Generates professional README files with modern formatting
- **⚡ One-Command Operation**: `docgenie .` - that's it!
- **🔧 Highly Configurable**: Customize ignore patterns, output format, and more
- **📈 Smart Detection**: Automatically detects project type, main language, and features
- **🌐 Git Integration**: Includes repository information and contributor statistics
- **📦 Dependency Analysis**: Supports requirements.txt, package.json, Cargo.toml, go.mod, and more

## 📋 Requirements

- Python 3.8 or higher
- Git (optional, for repository information)

## 🛠️ Installation

### Install from PyPI (Coming Soon)

```bash
pip install docgenie
```

### Install from Source

```bash
git clone https://github.com/yourusername/DocGenie.git
cd DocGenie
pip install -e .
```

## 📖 Quick Start

### Generate README for any project

```bash
# Analyze current directory and generate README.md
docgenie .

# Analyze specific directory
docgenie /path/to/your/project

# Preview without saving
docgenie . --preview

# Specify custom output location
docgenie . --output /path/to/custom/README.md

# Add custom ignore patterns
docgenie . --ignore "*.log" --ignore "temp/*"
```

### Use as Python Library

```python
from docgenie import CodebaseAnalyzer, ReadmeGenerator

# Analyze codebase
analyzer = CodebaseAnalyzer('/path/to/project')
analysis_data = analyzer.analyze()

# Generate README
generator = ReadmeGenerator()
readme_content = generator.generate(analysis_data)

print(readme_content)
```

## 🎯 What DocGenie Analyzes

- **📁 Project Structure**: Directory tree and file organization
- **💻 Source Code**: Functions, classes, methods, and documentation
- **📦 Dependencies**: Package files (requirements.txt, package.json, etc.)
- **🔧 Configuration**: Config files and project settings
- **📝 Documentation**: Existing docs and README files
- **🌿 Git Information**: Repository details, branches, contributors
- **📊 Statistics**: Language distribution, code metrics

## 📚 Example Output

DocGenie generates README files with:

- **Project Overview**: Auto-generated description and features
- **Installation Instructions**: Detected from your dependency files
- **Usage Examples**: Based on your code structure
- **API Documentation**: Extracted from functions and classes
- **Project Structure**: Visual directory tree
- **Dependencies**: Organized by package manager
- **Contributing Guidelines**: Standard open-source templates

## 🛠️ Advanced Usage

### Command Line Options

```bash
docgenie --help                    # Show help
docgenie . --verbose               # Enable detailed output
docgenie . --force                 # Overwrite existing README
docgenie analyze . --format json   # Output analysis as JSON
docgenie init                      # Create basic README template
```

### Configuration

Create a `.docgenie.yaml` file in your project root:

```yaml
ignore_patterns:
  - "*.log"
  - "temp/*"
  - "private/"

template_customizations:
  include_api_docs: true
  include_directory_tree: true
  max_functions_documented: 20
```

## 🏗️ Architecture

DocGenie consists of several key components:

- **CodebaseAnalyzer**: Multi-language code analysis engine
- **LanguageParser**: Syntax-aware parsers for different languages
- **ReadmeGenerator**: Jinja2-based template rendering system
- **CLI Interface**: User-friendly command-line interface

## 🤝 Contributing

We welcome contributions! Here's how to get started:

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/amazing-feature`)
3. Make your changes and add tests
4. Run the test suite (`pytest`)
5. Commit your changes (`git commit -m 'Add amazing feature'`)
6. Push to the branch (`git push origin feature/amazing-feature`)
7. Open a Pull Request

### Development Setup

```bash
git clone https://github.com/yourusername/DocGenie.git
cd DocGenie
pip install -e ".[dev]"
pytest
```

## 📄 License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## 🙏 Acknowledgments

- Thanks to all contributors who help make DocGenie better
- Inspired by the need for better automated documentation tools
- Built with love for the open-source community

## 📞 Contact

- **GitHub**: [DocGenie Repository](https://github.com/yourusername/DocGenie)
- **Issues**: [Report bugs or request features](https://github.com/yourusername/DocGenie/issues)
- **Discussions**: [Join the community](https://github.com/yourusername/DocGenie/discussions)

---

**⭐ If DocGenie helps you, please star this repository to support the project!**

*Made with 🧞 by the DocGenie team*
